define(["app","backbone","../net/net"],function(App,Backbone,Net){var net=Net.singleton(),NearbyClassrooms=Backbone.View.extend({initialize:function(){var self=this;self.state=null,net.locationLoaded?self.fetchClassrooms():(self.listenTo(App,"classroom:location:resolved",self.fetchClassrooms.bind(self)),self.listenTo(App,"classroom:location:locating",self.render.bind(self))),self.render()},render:function(){var self=this,renderOpts={state:self.state,error:self.error,classrooms:self.classrooms,locating:net.locationLookupStarted&&!net.locationLoaded,reloadable:net.locationLoaded&&net.location&&"loading"!==self.state};self.$el.html(window.getMixin("classroom-nearby")(renderOpts)),renderOpts.reloadable&&self.$(".nearby-title").click(self.fetchClassrooms.bind(self)),"loaded"===self.state&&self.$(".nearby-classroom").click(function(){App.trigger("classroom:join",$(this).data("joinid"))})},setState:function(state){state!==this.state&&(this.state=state,this.render())},fetchClassrooms:function(){function stateChanged(error,result){return error?(self.error=error,void self.setState("error")):(self.classrooms=result,void self.setState(result.length?"loaded":"empty"))}var self=this;if("loading"!==self.state)return self.setState("loading"),net.location?void net.getNearbyClassrooms(stateChanged):(self.error=new Error("Cannot get location"),void self.setState("error"))}});return NearbyClassrooms});