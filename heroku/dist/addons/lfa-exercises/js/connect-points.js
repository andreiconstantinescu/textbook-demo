define(["jquery","../js/exercise","raphael"],function($,Exercises,Raphael){var ConnectPoints=Exercises.Exercise.extend({type:"ConnectPoints",saveState:function(){for(var conn=[],i=0,v=this.connections,n=v.length;n>i;i++){var obj=v[i];"string"==typeof obj.points[0]&&"string"==typeof obj.points[1]&&conn.push(obj.points)}this.set("state",conn),this.trigger("change:state",conn,this)},forceReflow:function(cb){this.$el[0].offsetWidth=this.$el[0].offsetWidth,setTimeout(cb,0)},componentDidMount:function(){var self=this;window.ex=self,self.cancelEvents=[],self.validConnections=self.options.connections||[],self.manyToMany=self.options.manyToMany||!1,self.lineStyle=self.options.lineStyle||{stroke:"#1E6BBA"},self.orientation=self.options.orientation||"any",self.correctLineStyle=self.options.correctLineStyle||{},self.connectors=self.getConnectors(),self.connections=self.getConnections();var l=self.options.connections.length;self.irritationLevel=self.options.irritationLevel||Math.round(l*l*1.5),self.bindEvents(),self.initPaper()},getConnectors:function(){var self=this,r={},autoName=0;return self.$el.find(".connector").each(function(idx,el){var $el=$(el),conn={$el:$el,name:$el.data("name"),group:$el.data("group")};conn.name||(conn.name="_connector"+autoName++);for(var p=el.parentNode;p&&!conn.group;p=p.parentNode)conn.group=$(p).data("group");for(p=el.parentNode;p;p=p.parentNode){var $p=$(p);if($p.hasClass("extension")){conn.extension=$p;break}}!conn.extension&&$el.parent().hasClass("pin-to")&&(conn.extension=$el.parent()),self.configureForDrag($el,conn.name),conn.extension&&self.configureForDrag(conn.extension,conn.name),r[conn.name]=conn}),r},getConnections:function(){for(var self=this,state=self.get("state")||[],r=[],i=0,n=state.length;n>i;i++){var obj=state[i];if(self.connectors[obj[0]]&&self.connectors[obj[1]]){var conn={points:[obj[0],obj[1]]};r.push(conn)}}return r},initPaper:function(){var self=this;self.paper=Raphael(self.$el[0],0,0),self.svg=this.$el.children("svg");var timer=null,onResize=_.throttle(function(refired){self.forceReflow(function(){var w=self.$el.outerWidth(),h=self.$el.outerHeight();self.paper.setSize(w,h),self.svg.css("width",w),self.svg.css("height",h),self.svg.css("top",0),self.svg.css("left",0),self.forceReflow(self.render.bind(self)),refired||(timer&&clearTimeout(timer),timer=setTimeout(function(){onResize(!0),timer=void 0},1e3))})},100);self.onResize=onResize,$(window).on("resize",onResize),self.cancelEvents.push(function(){$(window).off("resize",onResize)}),onResize()},renderConnection:function(conn){var w,h,i,j,m,v,points=conn.points.slice(),needsNubs=[!0,!0],svgOffset=this.$el.offset();for(i=0;2>i;i++){var p=points[i];if("string"==typeof p){var connEl=this.connectors[p].$el,off=connEl.offset();off.top-=svgOffset.top,off.left-=svgOffset.left,w=connEl.outerWidth(),h=connEl.outerHeight(),points[i]={x:off.left+.5*w,y:off.top+.5*h},needsNubs[i]=!1}}var cp,strongness=.5;w=points[1].x-points[0].x,h=points[1].y-points[0].y;var horiz;horiz="horizontal"===this.orientation?!0:"vertical"===this.orientation?!1:Math.abs(w)>=Math.abs(h),cp=horiz?{x1:points[0].x+w*strongness,y1:points[0].y,x2:points[1].x-w*strongness,y2:points[1].y}:{x1:points[0].x,y1:points[0].y+h*strongness,x2:points[1].x,y2:points[1].y-h*strongness};var svgCommands=["M",points[0].x,points[0].y,"C",cp.x1,cp.y1,cp.x2,cp.y2,points[1].x,points[1].y];if(conn.view?conn.view.path.attr("path",svgCommands.join(" ")):(conn.view={path:this.paper.path(svgCommands),nubs:[null,null]},conn.view.path.attr("stroke-width",.5*this.nubSize)),conn.view.path.attr(this.lineStyle),!_.isEqual(this.correctLineStyle,{})){var correct=!1;for(j=0,v=this.validConnections,m=v.length;m>j;j++){var vconn=v[j];if(vconn[0]===conn.points[0]&&vconn[1]===conn.points[1]||vconn[0]===conn.points[1]&&vconn[1]===conn.points[0]){correct=!0;break}}correct&&conn.view.path.attr(this.correctLineStyle)}for(i=0;2>i;i++){var nub=conn.view.nubs[i];if(needsNubs[i]){nub||(conn.view.nubs[i]=nub=$('<div class="connector"><div/>'),nub.css("position","absolute"),nub.css("left",0),nub.css("top",0),this.$el.append(nub));var vendors=["","-webkit-","-moz-","-o-","-ms-"];for(j=0,m=vendors.length;m>j;j++)nub.css(vendors[j]+"transform","translate3d("+(points[i].x-.5*this.nubSize)+"px, "+(points[i].y-.5*this.nubSize)+"px, 0px)")}else nub&&(nub.remove(),conn.view.nubs[i]=null)}},destroyConnectionView:function(view){view.path&&(view.path.remove(),view.path=null);for(var i=0;2>i;i++){var nub=view.nubs[i];view.nubs[i]=null,nub&&nub.remove()}},render:function(){var self=this;if(self.paper){self.nubSize=20;for(var i=0,v=self.connections,n=v.length;n>i;i++)self.renderConnection(v[i])}},configureForDrag:function(el,conn){var self=this;el.on("mousedown",function(e){self.touchId=null,self.mouseDown(e.pageX,e.pageY,conn)&&e.preventDefault()}),el.on("touchstart",function(e){if(!self.touchId){var touch=e.originalEvent.touches[0];self.mouseDown(touch.pageX,touch.pageY,conn)&&(e.preventDefault(),self.touchId=touch.identifier)}}),el.on("touchmove",function(e){for(var touches=e.originalEvent.changedTouches,i=0,n=touches.length;n>i;i++){var touch=touches[i];if(touch.identifier===self.touchId){self.mouseMove(touch.pageX,touch.pageY)&&(e.preventDefault(),e.stopPropagation());break}}}),el.on("touchend touchcancel",function(e){for(var touches=e.originalEvent.changedTouches,i=0,n=touches.length;n>i;i++){var touch=touches[i];if(touch.identifier===self.touchId){self.touchId=null,self.mouseUp()&&e.preventDefault();break}}}),self.msCrapware&&el.each(function(idx,elem){var pointerDown=function(e){self.touchId||self.mouseDown(e.pageX,e.pageY,conn)&&(self.touchId=e.pointerId,e.preventDefault(),e.stopPropagation())};self.msBullshit?elem.addEventListener("MSPointerDown",pointerDown):elem.addEventListener("pointerdown",pointerDown)})},bindEvents:function(){var self=this,elem=document,mouseMove=function(e){self.touchId||self.mouseMove(e.pageX,e.pageY)&&(e.preventDefault(),e.stopPropagation())},mouseUp=function(){self.touchId||self.mouseUp()};if($(elem).on("mousemove",mouseMove),$(elem).on("mouseup",mouseUp),self.msCrapware=!1,self.msBullshit=!0,window.navigator.pointerEnabled?(self.msCrapware=!0,self.msBullshit=!1):window.navigator.msPointerEnabled&&(self.msCrapware=!0),self.msCrapware){var pointerMove=function(e){self.touchId===e.pointerId&&self.mouseMove(e.pageX,e.pageY,$(this))&&(e.preventDefault(),e.stopPropagation())},pointerUp=function(e){self.touchId===e.pointerId&&(self.touchId=null,self.mouseUp()&&(e.preventDefault(),e.stopPropagation()))};self.msBullshit?(elem.addEventListener("MSPointerMove",pointerMove),elem.addEventListener("MSPointerUp",pointerUp),elem.addEventListener("MSPointerCancel",pointerUp)):(elem.addEventListener("pointermove",pointerMove),elem.addEventListener("pointerup",pointerUp),elem.addEventListener("pointercancel",pointerUp))}self.cancelEvents.push(function(){self.msCrapware&&(self.msBullshit?(elem.removeEventListener("MSPointerMove",pointerMove),elem.removeEventListener("MSPointerUp",pointerUp),elem.removeEventListener("MSPointerCancel",pointerUp)):(elem.removeEventListener("pointermove",pointerMove),elem.removeEventListener("pointerup",pointerUp),elem.removeEventListener("pointercancel",pointerUp))),$(elem).off("mousemove",mouseMove),$(elem).off("mouseup",mouseUp)})},componentWillUnmount:function(){var self=this;if(self.cancelEvents){for(var i=0,v=self.cancelEvents,n=v.length;n>i;i++)v[i]();delete self.cancelEvents}},hitTest:function(x,y,div){var pos=div.offset(),w=div.outerWidth(),h=div.outerHeight();return x>=pos.left&&x<=pos.left+w&&y>=pos.top&&y<=pos.top+h},mouseDown:function(x,y,name){var conn,self=this;if(self.draggingConnection)return!1;if(!self.manyToMany)for(var i=0,v=self.connections,n=v.length;n>i;i++){if(conn=v[i],conn.points[0]===name){self.draggingConnection=conn,self.draggingConnIndex=i,self.draggingEnd=0,self.draggingFrom=conn.points[1];break}if(conn.points[1]===name){self.draggingConnection=conn,self.draggingConnIndex=i,self.draggingEnd=1,self.draggingFrom=conn.points[0];break}}return self.draggingConnection||(conn={points:[name,null]},self.draggingConnIndex=self.connections.length,self.draggingConnection=conn,self.draggingEnd=1,self.draggingFrom=name,self.connections.push(conn)),self.mouseMove(x,y),!0},getHoveredConnector:function(x,y){for(var i=0,v=_.keys(this.connectors),n=v.length;n>i;i++){var key=v[i],conn=this.connectors[key];if(this.hitTest(x,y,conn.$el)||conn.extension&&this.hitTest(x,y,conn.extension))return conn.name}return null},canDragTo:function(hoveredObject){if(!hoveredObject)return!1;var newConn=this.connectors[hoveredObject],fromConn=this.connectors[this.draggingFrom];if(!this.manyToMany)for(var i=0,v=this.connections,n=v.length;n>i;i++){var conn=v[i];if(conn.points[0]===hoveredObject||conn.points[1]===hoveredObject)return!1}return newConn.group!==fromConn.group},setHoveredObject:function(hoveredObject){var self=this;if(hoveredObject!==self.hoveredObject){if(self.hoveredObject){var oldConn=self.connectors[self.hoveredObject];oldConn.$el.removeClass("hover"),oldConn.extension&&oldConn.extension.removeClass("hover")}if(hoveredObject&&self.canDragTo(hoveredObject)){var newConn=self.connectors[hoveredObject];newConn.$el.addClass("hover"),newConn.extension&&newConn.extension.addClass("hover")}self.hoveredObject=hoveredObject}},mouseMove:function(x,y){var self=this;if(!self.draggingConnection)return!1;var off=self.$el.offset(),w=self.$el.width(),h=self.$el.height(),pageX=x,pageY=y;x-=off.left,y-=off.top;var border=.5*self.nubSize;return border>x&&(x=border),border>y&&(y=border),x>w-border&&(x=w-border),y>h-border&&(y=h-border),self.draggingConnection.points[self.draggingEnd]={x:x,y:y},self.setHoveredObject(self.getHoveredConnector(pageX,pageY)),self.render(),!0},mouseUp:function(){var self=this;return self.draggingConnection?(self.hoveredObject&&self.canDragTo(self.hoveredObject)?self.draggingConnection.points[self.draggingEnd]=self.hoveredObject:(self.connections.splice(self.draggingConnIndex,1),self.destroyConnectionView(self.draggingConnection.view)),self.draggingConnection=null,self.setHoveredObject(null),self.saveState(),!0):!1},score:function(){for(var scale=100/this.validConnections.length,score=0,i=0,v=this.connections,n=v.length;n>i;i++){var conn=v[i];score--;for(var j=0,w=this.validConnections,m=w.length;m>j;j++){var vconn=w[j];if(vconn[0]===conn.points[0]&&vconn[1]===conn.points[1]||vconn[0]===conn.points[1]&&vconn[1]===conn.points[0]){score+=2;break}}}return score*=scale,0>score&&(score=0),score>100&&(score=100),Math.round(score)}});return Exercises.ConnectPoints=ConnectPoints,Exercises});